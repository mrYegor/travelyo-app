{"version":3,"sources":["context.js","events/EventItem.js","events/CategoryItem.js","events/CategoryList.js","events/Sort.js","events/EventsList.js","imageSlider/ImageSlider.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","styles","li","display","flexDirection","backgroundColor","justifyContent","margin","padding","img","width","cursor","div","EventItem","event","useContext","getImages","filterByCategory","useState","showMoreLink","setShowMoreLink","style","price","className","onClick","bind","name","description","length","substring","href","e","preventDefault","title","dates","icon","faClock","popular","faThumbsUp","faThumbsDown","src","images","option","CategoryItem","category","value","toLowerCase","CategoryList","categories","selectedFilter","setSelectedFilter","onChange","str","target","map","index","key","Sort","sortByPrice","ul","listStyle","span","color","EventsList","props","events","id","ImageSlider","visibleSlider","slideImages","hideSlider","duration","transitionDuration","infinite","indicators","arrows","App","setEvents","filteredEvents","setFilteredEvents","eventsCount","setEventsCount","toggleSliderVisibility","setImages","setCategories","addEventBtn","createRef","getEvents","fetch","then","resp","json","Object","keys","activities","current","classList","add","tempCat","push","i","includes","getCategories","useEffect","Provider","filteredCategory","capitalizeFilter","charAt","toUpperCase","slice","filter","priceDirection","sortDirection","sort","a","b","reverse","type","ref","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83bfa1be.chunk.js","sourcesContent":["import React from 'react';\n\nconst Context = React.createContext();\n\nexport default Context;\n","import React, {useContext, useState} from 'react';\nimport Context from '../context';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock, faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\n\nconst styles = {\n    li: {\n        display: 'flex',\n        flexDirection: 'row',\n        backgroundColor: '#F4F4F3',\n        justifyContent: 'space-between',\n        margin: 20,\n        padding: 10,\n    },\n    img: {\n        width: 300,\n        cursor: 'pointer'\n    },\n    div: {\n        backgroundColor: '#fff',\n        padding: 10,\n    }\n};\n\nfunction EventItem({event}) {\n    const {getImages, filterByCategory} = useContext(Context);\n\n    const [showMoreLink, setShowMoreLink] = React.useState(true);\n\n    function showMoreDescr(e) {\n        e.preventDefault();\n        setShowMoreLink(false);\n    }\n\n    return(\n        <li style={styles.li}>\n            <div style={styles.div}>\n                <h3>Ticket price</h3>\n                <span>{event.price}</span>\n            </div>\n            <div style={styles.div} className='description-wrapper'>\n                <h3 onClick={filterByCategory.bind(null, event.name)}>\n                    {event.name}\n                </h3>\n\n                    {event.description.length > 200 && showMoreLink ?\n                        (<p>\n                            {`${event.description.substring(0, 200)}...`} <a href='#' className='read-more' onClick={showMoreDescr}>Read more</a>\n                        </p>) :\n                        (<p>{event.description}</p>)\n                    }\n                    <div className='date' title='Event Date'>\n                        {event.dates[0]} <FontAwesomeIcon icon={faClock} />\n                    </div>\n                    <div className='popularity' title='Popularity of the event'>\n                        <span>Popular Event</span>\n                        {event.popular ? <FontAwesomeIcon icon={faThumbsUp} /> : <FontAwesomeIcon icon={faThumbsDown} />}\n                    </div>\n            </div>\n            <div>\n                <img src={event.images[0]} style={styles.img} onClick={getImages.bind(null, event.images)}/>\n            </div>\n        </li>\n    )\n}\n\nexport default EventItem;\n","import React from 'react';\n\nconst styles = {\n    option: {\n        'textTransform': 'capitalize'\n    }\n};\n\nfunction CategoryItem({category}) {\n    return(\n        <option style={styles.option} value={category.toLowerCase()}>{category.toLowerCase()}</option>\n    )\n}\n\nexport default CategoryItem;\n","import React, {useContext, useState} from 'react';\nimport CategoryItem from './CategoryItem';\nimport Context from '../context'\n\nfunction CategoryList({categories}) {\n    const {filterByCategory} = useContext(Context);\n    const [selectedFilter, setSelectedFilter] = React.useState('');\n\n    function applyFilterCategory(str) {\n        setSelectedFilter(str)\n    }\n\n    return(\n        <select className='category-filter'\n                onClick={filterByCategory.bind(null, selectedFilter)}\n                onChange={e => applyFilterCategory(e.target.value)}\n        >\n            <option value='reset'>All categories</option>\n            {\n                categories.map((category, index) => {\n                    return <CategoryItem category={category} key={index + 1} />\n                })\n            }\n        </select>\n    )\n}\n\nexport default CategoryList;\n","import React, {useContext} from 'react';\nimport Context from '../context'\n\nfunction Sort() {\n    const {sortByPrice} = useContext(Context);\n    const [selectedFilter, setSelectedFilter] = React.useState('');\n\n    function applyFilterCategory(str) {\n        setSelectedFilter(str)\n    }\n\n    return(\n        <select className='sort'\n                onClick={sortByPrice.bind(null, selectedFilter)}\n                onChange={e => applyFilterCategory(e.target.value)}\n        >\n            <option value='reset'>Choose price</option>\n            <option value='toHigh'>Low to High</option>\n            <option value='toLow'>High to Low</option>\n        </select>\n    )\n}\n\nexport default Sort;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport EventItem from './EventItem';\nimport CategoryList from './CategoryList'\nimport Sort from './Sort'\n\nconst styles = {\n    ul: {\n        listStyle: 'none',\n        padding: 0,\n        width: '80%',\n        margin: 'auto'\n    },\n    span: {\n        color: '#3c8c9b'\n    }\n};\n\nfunction EventsList(props) {\n    return(\n        <div>\n            <h1>Upcoming events</h1>\n            <div className='top-bar'>\n                <div className='filters'>\n                    Category: <CategoryList categories={props.categories}/>\n                    Sort by price: <Sort/>\n                </div>\n                <h4>Total count: <span style={styles.span}>{props.events.length}</span></h4>\n            </div>\n            <ul style={styles.ul}>\n                {\n                    props.events.map(event => {\n                        return <EventItem event={event} key={event.id}/>\n                    })\n                }\n            </ul>\n\n        </div>\n    )\n}\n\nEventsList.propTypes = {\n    events: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default EventsList;\n","import React, {useContext, useState} from 'react';\nimport { Slide } from 'react-slideshow-image';\nimport './ImageSlider.css';\nimport Context from '../context';\n\nfunction ImageSlider({visibleSlider, slideImages}) {\n    const {hideSlider} = useContext(Context);\n    const images = slideImages[0];\n\n    const properties = {\n        duration: 5000,\n        transitionDuration: 500,\n        infinite: true,\n        indicators: true,\n        arrows: true\n    };\n\n    return (\n        visibleSlider && (<div className=\"slide-container\">\n            <Slide {...properties}>\n                <div className=\"each-slide\">\n                    <div style={{'backgroundImage': `url(${images[0]})`}} />\n                </div>\n                <div className=\"each-slide\">\n                    <div style={{'backgroundImage': `url(${images[1]})`}} />\n                </div>\n                <div className=\"each-slide\">\n                    <div style={{'backgroundImage': `url(${images[2]})`}} />\n                </div>\n\n            </Slide>\n            <button onClick={hideSlider} className='close-slider'>&times;</button>\n        </div>)\n    )\n}\n\nexport default ImageSlider;\n","import React, {useEffect} from 'react';\nimport EventsList from './events/EventsList';\nimport ImageSlider from './imageSlider/ImageSlider';\nimport Context from './context';\n\nfunction App() {\n  const [events, setEvents] = React.useState([]);\n  const [filteredEvents, setFilteredEvents] = React.useState([]);\n  const [eventsCount, setEventsCount] = React.useState(2);\n  const [visibleSlider, toggleSliderVisibility] = React.useState(false);\n  const [images, setImages] = React.useState([]);\n  const [categories, setCategories] = React.useState([]);\n\n  const addEventBtn = React.createRef();\n\n  function getEvents(eventsCount) {\n      fetch('https://s3.eu-central-1.amazonaws.com/js.smartair.co.il/custom/activities.json')\n          .then(resp => resp.json())\n          .then((events) => {\n              /* Object.values() doesn't work in my version of Chrome, so I cheated in this case */\n              events = Object.keys(events.activities).map(key => events.activities[key]);\n              if(events.length > eventsCount) {\n                  events.length = eventsCount;\n              } else if (addEventBtn.current) {\n                 addEventBtn.current.classList.add('none');\n              }\n\n              setEvents(events);\n              setFilteredEvents(events);\n              setCategories(getCategories(events));\n              setEventsCount(eventsCount + 1);\n          })\n  }\n\n  useEffect(() => {\n      getEvents(eventsCount)\n  }, []);\n\n  function getCategories(events) {\n      let tempCat = [];\n      for (let event of events) {\n          tempCat.push([...event.category])\n      }\n      for (let i = 0; i < tempCat.length; i++) {\n          for (let category of tempCat[i]) {\n              if (!categories.includes(category.toLowerCase())) {\n                  categories.push(category.toLowerCase())\n              }\n          }\n      }\n      return categories\n  }\n\n  function addEvent() {\n      getEvents(eventsCount);\n  }\n\n  function getImages(img) {\n      if (img.length >= 1) {\n          images.length = 0;\n          images.push([...img]);\n          toggleSliderVisibility(true);\n          setImages(images);\n      }\n  }\n\n  function filterByCategory(filteredCategory) {\n      setEvents(filteredEvents);\n      let tmpEvents = [];\n      /* Some of categories are capitalized*/\n      if (filteredCategory !== 'reset') {\n          let capitalizeFilter = `${filteredCategory.charAt(0).toUpperCase()}${filteredCategory.slice(1)}`;\n          setEvents(\n              tmpEvents = [...filteredEvents.filter(event => event.category.includes(filteredCategory) || event.category.includes(capitalizeFilter)\n              )]);\n      }\n  }\n\n  function sortByPrice(priceDirection) {\n\n      let sortDirection = [...filteredEvents];\n\n      sortDirection.sort((a, b) => {\n          return a.price - b.price\n      });\n\n      if (priceDirection === 'toLow') {\n          sortDirection.reverse()\n      }\n\n      setEvents(sortDirection);\n      setFilteredEvents(sortDirection);\n  }\n\n  function hideSlider() {\n      toggleSliderVisibility(false);\n  }\n\n  return (\n      <Context.Provider value={{getImages, hideSlider, filterByCategory, sortByPrice}}>\n        <div className=\"wrapper\">\n          <ImageSlider visibleSlider={visibleSlider} slideImages={images}/>\n          <EventsList events={events} categories={categories}/>\n          <button type=\"submit\" className='show-more-btn' onClick={addEvent} ref={addEventBtn}>Show more</button>\n        </div>\n      </Context.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}